plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.company.jpos'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
    // Try alternative repositories for jPOS if needed
    maven { 
        url = 'https://repo1.maven.org/maven2'
        name = 'Maven Central Mirror'
    }
    // Add jPOS repository only if accessible
    maven { 
        url = 'https://jpos.org/maven'
        name = 'jPOS Repository'
        allowInsecureProtocol = false
    }
}

dependencies {
    // jPOS Core
    implementation 'org.jpos:jpos:3.0.0'
    
    // Spring Boot starters (includes Jakarta Servlet API)
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // Database
    runtimeOnly 'com.h2database:h2'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    
    // Testcontainers
    testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
    testImplementation 'org.testcontainers:postgresql:1.19.0'
    testImplementation 'org.testcontainers:testcontainers:1.19.0'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['--enable-preview']
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'com.company.jpos.JPOSServerMain'
}

bootJar {
    archiveFileName = 'jpos-server.jar'
    mainClass = 'com.company.jpos.JPOSServerMain'
}